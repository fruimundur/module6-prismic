// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/** Content for PostPage documents */
interface BlogpostDocumentData {
    /**
     * Post Page field in *PostPage*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: blogpost.postpage
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    postpage: prismicT.KeyTextField;
    /**
     * Slice Zone field in *PostPage*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: blogpost.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<BlogpostDocumentDataSlicesSlice>;
}
/**
 * Slice for *PostPage → Slice Zone*
 *
 */
type BlogpostDocumentDataSlicesSlice = HeroSliceSlice | BlogPostSlice;
/**
 * PostPage document from Prismic
 *
 * - **API ID**: `blogpost`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogpostDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<BlogpostDocumentData>, "blogpost", Lang>;
/** Content for Homepage documents */
interface HomepageDocumentData {
    /**
     * Title field in *Homepage*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.title
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * Slice Zone field in *Homepage*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: homepage.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<HomepageDocumentDataSlicesSlice>;
}
/**
 * Slice for *Homepage → Slice Zone*
 *
 */
type HomepageDocumentDataSlicesSlice = HeroSliceSlice | BlogPostSlice;
/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> = prismicT.PrismicDocumentWithoutUID<Simplify<HomepageDocumentData>, "homepage", Lang>;
/** Content for QuotePage documents */
interface QuoteDocumentData {
    /**
     * Quote page field in *QuotePage*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: quote.quote
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    quote: prismicT.KeyTextField;
    /**
     * Slice Zone field in *QuotePage*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: quote.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/core-concepts/slices
     *
     */
    slices: prismicT.SliceZone<QuoteDocumentDataSlicesSlice>;
}
/**
 * Slice for *QuotePage → Slice Zone*
 *
 */
type QuoteDocumentDataSlicesSlice = BlogPostSlice;
/**
 * QuotePage document from Prismic
 *
 * - **API ID**: `quote`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/core-concepts/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type QuoteDocument<Lang extends string = string> = prismicT.PrismicDocumentWithUID<Simplify<QuoteDocumentData>, "quote", Lang>;
export type AllDocumentTypes = BlogpostDocument | HomepageDocument | QuoteDocument;
/**
 * Primary content in HeroSlice → Primary
 *
 */
interface HeroSliceSliceDefaultPrimary {
    /**
     * Title field in *HeroSlice → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: hero_slice.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *HeroSlice → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: hero_slice.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * image field in *HeroSlice → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: hero_slice.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
}
/**
 * Default variation for HeroSlice Slice
 *
 * - **API ID**: `default`
 * - **Description**: `HeroSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<HeroSliceSliceDefaultPrimary>, never>;
/**
 * Slice variation for *HeroSlice*
 *
 */
type HeroSliceSliceVariation = HeroSliceSliceDefault;
/**
 * HeroSlice Shared Slice
 *
 * - **API ID**: `hero_slice`
 * - **Description**: `HeroSlice`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type HeroSliceSlice = prismicT.SharedSlice<"hero_slice", HeroSliceSliceVariation>;
/**
 * Primary content in Post → Primary
 *
 */
interface BlogPostSliceDefaultPrimary {
    /**
     * Title field in *Post → Primary*
     *
     * - **Field Type**: Title
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: blog_post.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    title: prismicT.TitleField;
    /**
     * Description field in *Post → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: A nice description of your feature
     * - **API ID Path**: blog_post.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    description: prismicT.RichTextField;
    /**
     * Image field in *Post → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: blog_post.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
}
/**
 * Item in Post → Items
 *
 */
export interface BlogPostSliceDefaultItem {
    /**
     * Open Quote Button field in *Post → Items*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: blog_post.items[].openquotebutton
     * - **Documentation**: https://prismic.io/docs/core-concepts/link-content-relationship
     *
     */
    openquotebutton: prismicT.LinkField;
    /**
     * Open Quote Button Text field in *Post → Items*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: blog_post.items[].openquotebuttontext
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    openquotebuttontext: prismicT.KeyTextField;
}
/**
 * Default variation for Post Slice
 *
 * - **API ID**: `default`
 * - **Description**: `BlogPost`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type BlogPostSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<BlogPostSliceDefaultPrimary>, Simplify<BlogPostSliceDefaultItem>>;
/**
 * Slice variation for *Post*
 *
 */
type BlogPostSliceVariation = BlogPostSliceDefault;
/**
 * Post Shared Slice
 *
 * - **API ID**: `blog_post`
 * - **Description**: `BlogPost`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type BlogPostSlice = prismicT.SharedSlice<"blog_post", BlogPostSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }
    namespace Content {
        export type { BlogpostDocumentData, BlogpostDocumentDataSlicesSlice, BlogpostDocument, HomepageDocumentData, HomepageDocumentDataSlicesSlice, HomepageDocument, QuoteDocumentData, QuoteDocumentDataSlicesSlice, QuoteDocument, AllDocumentTypes, HeroSliceSliceDefaultPrimary, HeroSliceSliceDefault, HeroSliceSliceVariation, HeroSliceSlice, BlogPostSliceDefaultPrimary, BlogPostSliceDefaultItem, BlogPostSliceDefault, BlogPostSliceVariation, BlogPostSlice };
    }
}
